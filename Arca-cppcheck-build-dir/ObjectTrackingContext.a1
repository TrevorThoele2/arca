<?xml version="1.0"?>
<analyzerinfo checksum="3002363537">
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;Access::is_constructible_impl&apos;" verbose="Unused private function: &apos;Access::is_constructible_impl&apos;" cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\Access.h" line="16" column="21"/>
            <symbol>Access::is_constructible_impl</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;Access::is_constructible_impl&apos;" verbose="Unused private function: &apos;Access::is_constructible_impl&apos;" cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\Access.h" line="22" column="21"/>
            <symbol>Access::is_constructible_impl</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;type&apos; should be passed by const reference." verbose="Parameter &apos;type&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" line="7" column="55"/>
            <symbol>type</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;type&apos; should be passed by const reference." verbose="Parameter &apos;type&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" line="16" column="47"/>
            <symbol>type</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\PolymorphicManager.h" line="165" column="35"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\TypeRegistrationContext.h" line="143" column="16"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;typeID&apos; is assigned a value that is never used." verbose="Variable &apos;typeID&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\ObjectTrackingContext.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\PolymorphicManager.h" line="106" column="21"/>
            <symbol>typeID</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/Trevor/Documents/ProgrammingProjects/Inscription/Inscription/Const.h:64:41" call-funcname="RemoveConst" call-argnr="1" file="C:/Users/Trevor/Documents/ProgrammingProjects/Inscription/Inscription/BinaryArchive.h" line="138" col="24" my-id="C:/Users/Trevor/Documents/ProgrammingProjects/Inscription/Inscription/BinaryArchive.h:40:24" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="BoolFrom" lineNumber="16"/>
    <functiondecl functionName="TypeFrom" lineNumber="21"/>
    <functioncall functionName="Active"/>
    <functioncall functionName="Add"/>
    <functioncall functionName="Archive"/>
    <functioncall functionName="AttemptTrackObject"/>
    <functioncall functionName="BinaryArchive"/>
    <functioncall functionName="BoolFrom"/>
    <functioncall functionName="Clone"/>
    <functioncall functionName="Construct"/>
    <functioncall functionName="CopyEntryList"/>
    <functioncall functionName="CreateStorage"/>
    <functioncall functionName="Entry"/>
    <functioncall functionName="EntryBasePtr"/>
    <functioncall functionName="FindID"/>
    <functioncall functionName="FindRequiredEntry"/>
    <functioncall functionName="Inactive"/>
    <functioncall functionName="Input"/>
    <functioncall functionName="InputTypeNotFound"/>
    <functioncall functionName="InputTypes"/>
    <functioncall functionName="InputTypesAlreadyRegistered"/>
    <functioncall functionName="InputTypesFor"/>
    <functioncall functionName="IsOutput"/>
    <functioncall functionName="IsTypeIn"/>
    <functioncall functionName="Load"/>
    <functioncall functionName="ObjectTracker"/>
    <functioncall functionName="ObjectTrackerEntry"/>
    <functioncall functionName="ObjectTrackingContext"/>
    <functioncall functionName="Output"/>
    <functioncall functionName="OutputType"/>
    <functioncall functionName="OutputTypeFor"/>
    <functioncall functionName="PushTo"/>
    <functioncall functionName="Register"/>
    <functioncall functionName="RegisterType"/>
    <functioncall functionName="RegisterTypeImpl&lt;T&gt;"/>
    <functioncall functionName="RemoveConst"/>
    <functioncall functionName="ReplaceObject"/>
    <functioncall functionName="RequiredTypeTrackingIDFor"/>
    <functioncall functionName="Save"/>
    <functioncall functionName="Scriven"/>
    <functioncall functionName="T"/>
    <functioncall functionName="TrackObjects"/>
    <functioncall functionName="Type"/>
    <functioncall functionName="TypeFor"/>
    <functioncall functionName="TypeFrom"/>
    <functioncall functionName="TypeTracker"/>
    <functioncall functionName="TypeTrackerEntry"/>
    <functioncall functionName="any_of"/>
    <functioncall functionName="archive"/>
    <functioncall functionName="arg"/>
    <functioncall functionName="b"/>
    <functioncall functionName="back_inserter"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="castedStorage"/>
    <functioncall functionName="checkBegin"/>
    <functioncall functionName="checkEnd"/>
    <functioncall functionName="clear"/>
    <functioncall functionName="const"/>
    <functioncall functionName="const_cast"/>
    <functioncall functionName="count"/>
    <functioncall functionName="currentNewInput"/>
    <functioncall functionName="data"/>
    <functioncall functionName="decltype"/>
    <functioncall functionName="default"/>
    <functioncall functionName="delete"/>
    <functioncall functionName="derivedScribe"/>
    <functioncall functionName="duplicateTypes"/>
    <functioncall functionName="emplace"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="end"/>
    <functioncall functionName="entryList"/>
    <functioncall functionName="erase"/>
    <functioncall functionName="false"/>
    <functioncall functionName="find"/>
    <functioncall functionName="for"/>
    <functioncall functionName="from"/>
    <functioncall functionName="has_value"/>
    <functioncall functionName="here"/>
    <functioncall functionName="if"/>
    <functioncall functionName="inputType"/>
    <functioncall functionName="inputTypes"/>
    <functioncall functionName="int"/>
    <functioncall functionName="isOutputTypeIn"/>
    <functioncall functionName="make_unique"/>
    <functioncall functionName="move"/>
    <functioncall functionName="new"/>
    <functioncall functionName="newInputTypes"/>
    <functioncall functionName="newObject"/>
    <functioncall functionName="noexcept"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="object"/>
    <functioncall functionName="outputType"/>
    <functioncall functionName="previousType"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="reinterpret_cast"/>
    <functioncall functionName="return"/>
    <functioncall functionName="second"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="static_assert"/>
    <functioncall functionName="storage"/>
    <functioncall functionName="trackingContext"/>
    <functioncall functionName="true"/>
    <functioncall functionName="true_type"/>
    <functioncall functionName="type"/>
    <functioncall functionName="typeIndex"/>
    <functioncall functionName="type_index"/>
    <functioncall functionName="typeid"/>
    <functioncall functionName="userContext"/>
    <functioncall functionName="void"/>
  </FileInfo>
</analyzerinfo>
