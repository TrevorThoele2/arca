<?xml version="1.0"?>
<analyzerinfo checksum="1884751585">
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: int8_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: int8_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="11" column="9"/>
            <symbol>DataGenerator &lt; std :: int8_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: int16_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: int16_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="18" column="9"/>
            <symbol>DataGenerator &lt; std :: int16_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="25" column="9"/>
            <symbol>DataGenerator &lt; std :: int32_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="32" column="9"/>
            <symbol>DataGenerator &lt; std :: int64_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: uint8_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: uint8_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="39" column="9"/>
            <symbol>DataGenerator &lt; std :: uint8_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: uint16_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: uint16_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="46" column="9"/>
            <symbol>DataGenerator &lt; std :: uint16_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="53" column="9"/>
            <symbol>DataGenerator &lt; std :: uint32_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DataGenerator &lt; std :: uint64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DataGenerator &lt; std :: uint64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.h" line="60" column="9"/>
            <symbol>DataGenerator &lt; std :: uint64_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: int8_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: int8_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: int8_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: int16_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: int16_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: int16_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: int32_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: int64_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: uint8_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: uint8_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: uint8_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: uint16_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: uint16_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: uint16_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: uint32_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; std :: uint64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; std :: uint64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; std :: uint64_t &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;NumericDataGeneratorBase &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;NumericDataGeneratorBase &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="23" column="9"/>
            <symbol>NumericDataGeneratorBase &lt; unsigned int &gt;</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;range&apos; shadows outer argument" verbose="Local variable &apos;range&apos; shadows outer argument" cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="110" column="54" info="Shadow variable"/>
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\IntegerDataGenerator.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\TestFramework\TestFramework\NumericDataGeneratorBase.h" line="90" column="114" info="Shadowed declaration"/>
            <symbol>range</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functioncall functionName="CreateExclusiveGroup &lt; Value &gt;"/>
    <functioncall functionName="DataGenerator &lt; std :: uint64_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; Value &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: int16_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: int32_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: int64_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: int8_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: uint16_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: uint32_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: uint64_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; std :: uint8_t &gt;"/>
    <functioncall functionName="DataGeneratorBase &lt; unsigned int &gt;"/>
    <functioncall functionName="Distance"/>
    <functioncall functionName="Distribution"/>
    <functioncall functionName="NumericDataGeneratorBase"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: int16_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: int32_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: int64_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: int8_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: uint16_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: uint32_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: uint64_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; std :: uint8_t &gt;"/>
    <functioncall functionName="NumericDataGeneratorBase &lt; unsigned int &gt;"/>
    <functioncall functionName="Random"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: int16_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: int32_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: int64_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: int8_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: uint16_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: uint32_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: uint64_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; std :: uint8_t &gt; :: Value &gt;"/>
    <functioncall functionName="Range &lt; DataGeneratorBase &lt; unsigned int &gt; :: Value &gt;"/>
    <functioncall functionName="RangeMinNotLessThanEqualMax"/>
    <functioncall functionName="ThrowIfRangeInvalid"/>
    <functioncall functionName="ToDistribution"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="const"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="count"/>
    <functioncall functionName="creator"/>
    <functioncall functionName="dataGeneration"/>
    <functioncall functionName="distance"/>
    <functioncall functionName="distribution"/>
    <functioncall functionName="end"/>
    <functioncall functionName="find"/>
    <functioncall functionName="for"/>
    <functioncall functionName="generated"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="indexGenerator"/>
    <functioncall functionName="max"/>
    <functioncall functionName="min"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="percentCountTakesUpRange"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="randomEngine"/>
    <functioncall functionName="range"/>
    <functioncall functionName="reserve"/>
    <functioncall functionName="selectFromIndex"/>
    <functioncall functionName="selected"/>
    <functioncall functionName="size"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="this"/>
    <functioncall functionName="time"/>
  </FileInfo>
</analyzerinfo>
