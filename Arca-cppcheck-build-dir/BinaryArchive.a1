<?xml version="1.0"?>
<analyzerinfo checksum="2936146383">
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;Access::is_constructible_impl&apos;" verbose="Unused private function: &apos;Access::is_constructible_impl&apos;" cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\Access.h" line="16" column="21"/>
            <symbol>Access::is_constructible_impl</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;Access::is_constructible_impl&apos;" verbose="Unused private function: &apos;Access::is_constructible_impl&apos;" cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\Access.h" line="22" column="21"/>
            <symbol>Access::is_constructible_impl</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FilePath&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FilePath&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Chroma\Chroma\FilePath.h" line="16" column="9"/>
            <symbol>FilePath</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FilePath&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FilePath&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Chroma\Chroma\FilePath.h" line="18" column="9"/>
            <symbol>FilePath</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\PolymorphicManager.h" line="165" column="35"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\TypeRegistrationContext.h" line="100" column="0"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\TypeRegistrationContext.h" line="143" column="16"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;typeID&apos; is assigned a value that is never used." verbose="Variable &apos;typeID&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\BinaryArchive.cpp" file="C:\Users\Trevor\Documents\ProgrammingProjects\Inscription\Inscription\PolymorphicManager.h" line="106" column="21"/>
            <symbol>typeID</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/Trevor/Documents/ProgrammingProjects/Inscription/Inscription/Const.h:64:41" call-funcname="RemoveConst" call-argnr="1" file="C:/Users/Trevor/Documents/ProgrammingProjects/Inscription/Inscription/BinaryArchive.h" line="138" col="24" my-id="C:/Users/Trevor/Documents/ProgrammingProjects/Inscription/Inscription/BinaryArchive.h:40:24" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="AttemptReplaceTrackedObject" lineNumber="11"/>
    <functiondecl functionName="TrackObjects" lineNumber="16"/>
    <functiondecl functionName="TrackSavedConstruction" lineNumber="23"/>
    <functiondecl functionName="CopyTrackersTo" lineNumber="28"/>
    <functiondecl functionName="MoveTrackersTo" lineNumber="33"/>
    <functiondecl functionName="IsOutput" lineNumber="38"/>
    <functiondecl functionName="IsInput" lineNumber="43"/>
    <functiondecl functionName="AsOutput" lineNumber="48"/>
    <functiondecl functionName="AsInput" lineNumber="53"/>
    <functiondecl functionName="AsOutput" lineNumber="58"/>
    <functiondecl functionName="AsInput" lineNumber="63"/>
    <functiondecl functionName="ClientSignature" lineNumber="68"/>
    <functiondecl functionName="ClientVersion" lineNumber="73"/>
    <functiondecl functionName="InscriptionVersion" lineNumber="78"/>
    <functiondecl functionName="MovePositionToStart" lineNumber="83"/>
    <functioncall functionName="Activate"/>
    <functioncall functionName="Active"/>
    <functioncall functionName="Add"/>
    <functioncall functionName="Archive"/>
    <functioncall functionName="AttemptTrackObject"/>
    <functioncall functionName="BinaryArchive"/>
    <functioncall functionName="Buffer"/>
    <functioncall functionName="Clear"/>
    <functioncall functionName="Clone"/>
    <functioncall functionName="Close"/>
    <functioncall functionName="Construct"/>
    <functioncall functionName="CopyEntryList"/>
    <functioncall functionName="CreateStorage"/>
    <functioncall functionName="EnsureCorrectEndianness"/>
    <functioncall functionName="Entry"/>
    <functioncall functionName="Entry &lt; T &gt;"/>
    <functioncall functionName="EntryBasePtr"/>
    <functioncall functionName="FailedStream"/>
    <functioncall functionName="FileEncounteredError"/>
    <functioncall functionName="FilePath"/>
    <functioncall functionName="FindID"/>
    <functioncall functionName="FindRequiredEntry"/>
    <functioncall functionName="GetValue"/>
    <functioncall functionName="Inactive"/>
    <functioncall functionName="Input"/>
    <functioncall functionName="InputBinaryArchive"/>
    <functioncall functionName="InputBinaryFile"/>
    <functioncall functionName="InputTypeNotFound"/>
    <functioncall functionName="InputTypes"/>
    <functioncall functionName="InputTypesAlreadyRegistered"/>
    <functioncall functionName="InputTypesFor"/>
    <functioncall functionName="IsActive"/>
    <functioncall functionName="IsLittleEndian"/>
    <functioncall functionName="IsOutput"/>
    <functioncall functionName="IsTypeIn"/>
    <functioncall functionName="Load"/>
    <functioncall functionName="NotOpenable"/>
    <functioncall functionName="ObjectTracker"/>
    <functioncall functionName="ObjectTrackerEntry"/>
    <functioncall functionName="Open"/>
    <functioncall functionName="Output"/>
    <functioncall functionName="OutputBinaryArchive"/>
    <functioncall functionName="OutputBinaryFile"/>
    <functioncall functionName="OutputType"/>
    <functioncall functionName="OutputTypeFor"/>
    <functioncall functionName="PushAll"/>
    <functioncall functionName="PushTo"/>
    <functioncall functionName="ReadData"/>
    <functioncall functionName="ReadFromFile"/>
    <functioncall functionName="ReadImpl"/>
    <functioncall functionName="Register"/>
    <functioncall functionName="RegisterType"/>
    <functioncall functionName="RegisterTypeImpl&lt;T&gt;"/>
    <functioncall functionName="RemoveConst"/>
    <functioncall functionName="ReplaceObject"/>
    <functioncall functionName="RequiredTypeTrackingIDFor"/>
    <functioncall functionName="Save"/>
    <functioncall functionName="Scriven"/>
    <functioncall functionName="SeekStream"/>
    <functioncall functionName="SignalSavedConstruction"/>
    <functioncall functionName="Stream &lt; std :: ifstream &gt;"/>
    <functioncall functionName="Stream &lt; std :: ofstream &gt;"/>
    <functioncall functionName="SwapBytes"/>
    <functioncall functionName="T"/>
    <functioncall functionName="Type"/>
    <functioncall functionName="TypeFor"/>
    <functioncall functionName="TypeRegistrationContext &lt; BinaryArchive &gt;"/>
    <functioncall functionName="TypeTracker"/>
    <functioncall functionName="TypeTrackerEntry"/>
    <functioncall functionName="WriteData"/>
    <functioncall functionName="WriteImpl"/>
    <functioncall functionName="WriteToFile"/>
    <functioncall functionName="any_of"/>
    <functioncall functionName="archive"/>
    <functioncall functionName="arg"/>
    <functioncall functionName="back_inserter"/>
    <functioncall functionName="bad"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="castedStorage"/>
    <functioncall functionName="checkBegin"/>
    <functioncall functionName="checkEnd"/>
    <functioncall functionName="clear"/>
    <functioncall functionName="clientSignature"/>
    <functioncall functionName="clientVersion"/>
    <functioncall functionName="close"/>
    <functioncall functionName="const"/>
    <functioncall functionName="const_cast"/>
    <functioncall functionName="count"/>
    <functioncall functionName="currentNewInput"/>
    <functioncall functionName="data"/>
    <functioncall functionName="decltype"/>
    <functioncall functionName="default"/>
    <functioncall functionName="delete"/>
    <functioncall functionName="derivedScribe"/>
    <functioncall functionName="direction"/>
    <functioncall functionName="duplicateTypes"/>
    <functioncall functionName="dynamic_cast"/>
    <functioncall functionName="emplace"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="end"/>
    <functioncall functionName="entryList"/>
    <functioncall functionName="erase"/>
    <functioncall functionName="false"/>
    <functioncall functionName="find"/>
    <functioncall functionName="first"/>
    <functioncall functionName="for"/>
    <functioncall functionName="from"/>
    <functioncall functionName="has_value"/>
    <functioncall functionName="hash"/>
    <functioncall functionName="here"/>
    <functioncall functionName="if"/>
    <functioncall functionName="inputType"/>
    <functioncall functionName="inputTypes"/>
    <functioncall functionName="inscriptionVersion"/>
    <functioncall functionName="int"/>
    <functioncall functionName="isOpen"/>
    <functioncall functionName="isOutputTypeIn"/>
    <functioncall functionName="make_unique"/>
    <functioncall functionName="mode"/>
    <functioncall functionName="move"/>
    <functioncall functionName="new"/>
    <functioncall functionName="newInputTypes"/>
    <functioncall functionName="newObject"/>
    <functioncall functionName="noexcept"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="object"/>
    <functioncall functionName="objectTracker"/>
    <functioncall functionName="open"/>
    <functioncall functionName="operator="/>
    <functioncall functionName="operatorconstchar*"/>
    <functioncall functionName="operatorstd::string"/>
    <functioncall functionName="outputType"/>
    <functioncall functionName="override"/>
    <functioncall functionName="path"/>
    <functioncall functionName="polymorphicManager"/>
    <functioncall functionName="postHeaderPosition"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="read"/>
    <functioncall functionName="reinterpret_cast"/>
    <functioncall functionName="return"/>
    <functioncall functionName="second"/>
    <functioncall functionName="set"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="static_assert"/>
    <functioncall functionName="storage"/>
    <functioncall functionName="stream"/>
    <functioncall functionName="t"/>
    <functioncall functionName="this"/>
    <functioncall functionName="trackingContext"/>
    <functioncall functionName="trackingID"/>
    <functioncall functionName="true"/>
    <functioncall functionName="true_type"/>
    <functioncall functionName="type"/>
    <functioncall functionName="typeIndex"/>
    <functioncall functionName="typeRegistrationContext"/>
    <functioncall functionName="typeTracker"/>
    <functioncall functionName="type_index"/>
    <functioncall functionName="typeid"/>
    <functioncall functionName="unique_ptr"/>
    <functioncall functionName="userContext"/>
    <functioncall functionName="var"/>
    <functioncall functionName="void"/>
    <functioncall functionName="write"/>
  </FileInfo>
</analyzerinfo>
